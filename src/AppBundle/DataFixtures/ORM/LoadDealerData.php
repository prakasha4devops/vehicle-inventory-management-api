<?php
// Auto-generated by the console command generate:doctrine:fixtures
// WARNING: Manual editing will be lost when command is run again

namespace AppBundle\DataFixtures\ORM;

use IMS\CommonBundle\Entity\Dealer;
use AppBundle\DataFixtures\BaseFixture;
use Doctrine\Common\DataFixtures\OrderedFixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;

class LoadDealerData extends BaseFixture implements OrderedFixtureInterface
{
    /**
     * Load data fixtures with the passed EntityManager
     *
     * @param ObjectManager $manager
     */
    public function load(ObjectManager $manager)
    {
        
        for ($i = 0; $i < 30; $i++) {
            $entity = new Dealer();

            $entity->setDealerRef($this->randomPronounceableWord(1, 10));
            $entity->setName($this->randomPronounceableWord(1, 10));
            $entity->setTradingTitle($this->randomPronounceableWord(1, 10));
            $entity->setEmail($this->randomPronounceableWord(1, 10));
            $entity->setPublicUrl($this->randomPronounceableWord(1, 10));
            $entity->setIsApproved(rand(0, 1) ? false : true);
            $entity->setIsVerified(rand(0, 1) ? false : true);
            $entity->setDateAdded(new \DateTime());
            $entity->setDateUpdated(new \DateTime());
            $entity->setAddedBy($this->randomPronounceableWord(2, 20));
            $entity->setUpdatedBy($this->randomPronounceableWord(2, 20));
            $entity->setDealerStatus(mt_rand(1,100));
            $entity->setDealerType(mt_rand(1,100));
            $entity->setStatus(1);
            $entity->setLocation($this->getReference('IMS_CommonBundle_Entity_Location'.$i));
            $entity->setAccount($this->getReference('IMS_CommonBundle_Entity_Account'.$i));
            $entity->setDealerGroup($this->getReference('IMS_CommonBundle_Entity_DealerGroup'.$i));
            
            $manager->persist($entity);
            $this->addReference('IMS_CommonBundle_Entity_Dealer'.$i, $entity);
        }

        $manager->flush();
    }

    /**
     * Get the order of this fixture
     *
     * @return integer
     */
    public function getOrder()
    {
        return 16;
    }

}